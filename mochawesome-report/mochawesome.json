{
  "stats": {
    "suites": 2,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2025-06-25T07:28:19.225Z",
    "end": "2025-06-25T07:28:21.413Z",
    "duration": 2188,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "27330bc9-09ce-45cd-83ff-9617cc64db77",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "17550f10-ab25-415d-b64e-dc433e806ad0",
          "title": "Feature Reqres",
          "fullFile": "/Users/fera.fanesya/api_automation/tests/login.js",
          "file": "/tests/login.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET List Users",
              "fullTitle": "Feature Reqres GET List Users",
              "timedOut": false,
              "duration": 223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users?page=2\");\nconst data = await response.json();\nassert.strictEqual(response.status, 200);\nassert.strictEqual(data.page, 2);\nassert.strictEqual(data.data[0].id, 7);\nassert.strictEqual(data.data[0].email, \"michael.lawson@reqres.in\");",
              "err": {},
              "uuid": "b83013f8-b16e-4e86-a001-36df40038051",
              "parentUUID": "17550f10-ab25-415d-b64e-dc433e806ad0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST Create User",
              "fullTitle": "Feature Reqres POST Create User",
              "timedOut": false,
              "duration": 479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users\", {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"x-api-key\": \"reqres-free-v1\"\n  },\n  body: JSON.stringify({\n    name: \"shinta\",\n    job: \"leader\"\n  })\n});\nconst data = await response.json();\nassert.strictEqual(response.status, 201);\nassert.strictEqual(data.name, \"shinta\");\nassert.strictEqual(data.job, \"leader\");",
              "err": {},
              "uuid": "502460a1-34bb-41d7-9c52-cef8d0b2fee7",
              "parentUUID": "17550f10-ab25-415d-b64e-dc433e806ad0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET Single User (ID = 2)",
              "fullTitle": "Feature Reqres GET Single User (ID = 2)",
              "timedOut": false,
              "duration": 47,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\");\nconst data = await response.json();\nassert.strictEqual(response.status, 200);\nassert.strictEqual(data.data.id, 2);\nassert.strictEqual(data.data.email, \"janet.weaver@reqres.in\");",
              "err": {},
              "uuid": "39c2af7b-d225-4caf-a66e-241be41062cc",
              "parentUUID": "17550f10-ab25-415d-b64e-dc433e806ad0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST Register - successful",
              "fullTitle": "Feature Reqres POST Register - successful",
              "timedOut": false,
              "duration": 461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/register\", {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"x-api-key\": \"reqres-free-v1\"\n  },\n  body: JSON.stringify({\n    email: \"eve.holt@reqres.in\",\n    password: \"pistol\"\n  })\n});\nconst data = await response.json();\nassert.strictEqual(response.status, 200);\nassert.ok(data.id);\nassert.ok(data.token);",
              "err": {},
              "uuid": "969c001a-ecf9-43c6-9055-153395956add",
              "parentUUID": "17550f10-ab25-415d-b64e-dc433e806ad0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PATCH Update User",
              "fullTitle": "Feature Reqres PATCH Update User",
              "timedOut": false,
              "duration": 513,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\", {\n  method: \"PATCH\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"x-api-key\": \"reqres-free-v1\"\n  },\n  body: JSON.stringify({\n    name: \"shinta updated\",\n    job: \"developer\"\n  })\n});\nconst data = await response.json();\nassert.strictEqual(response.status, 200);\nassert.strictEqual(data.name, \"shinta updated\");\nassert.strictEqual(data.job, \"developer\");",
              "err": {},
              "uuid": "22aac296-84e1-4f68-bff1-f1f87fe533df",
              "parentUUID": "17550f10-ab25-415d-b64e-dc433e806ad0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE User",
              "fullTitle": "Feature Reqres DELETE User",
              "timedOut": false,
              "duration": 419,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\", {\n  method: \"DELETE\",\n  headers: {\n           \"Content-Type\": \"application/json\",\n           \"x-api-key\": \"reqres-free-v1\"\n  },\n});\nassert.strictEqual(response.status, 204);",
              "err": {},
              "uuid": "309cf69d-0498-430d-92e3-98e1bca6111a",
              "parentUUID": "17550f10-ab25-415d-b64e-dc433e806ad0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b83013f8-b16e-4e86-a001-36df40038051",
            "502460a1-34bb-41d7-9c52-cef8d0b2fee7",
            "39c2af7b-d225-4caf-a66e-241be41062cc",
            "969c001a-ecf9-43c6-9055-153395956add",
            "22aac296-84e1-4f68-bff1-f1f87fe533df",
            "309cf69d-0498-430d-92e3-98e1bca6111a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2142,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e0ca004a-72ca-43de-92f3-fda4219f6d42",
          "title": "Validasi JSON Schema",
          "fullFile": "/Users/fera.fanesya/api_automation/tests/validate.js",
          "file": "/tests/validate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should validate response against schema",
              "fullTitle": "Validasi JSON Schema should validate response against schema",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responseData = {\nname: \"Gajah Lucu\",\nage: 60,\nisActive: true,\n};\nconst schema = {\ntype: \"object\",\nproperties: {\nname: { type: \"string\" },\nage: { type: \"number\" },\nisActive: { type: \"boolean\" },\n},\nrequired: [\"name\", \"age\", \"isActive\"],\n};\nconst validate = ajv.compile(schema);\nconst isValid = validate(responseData);\n// Cetak error jika tidak valid\nif (!isValid) {\nconsole.error(\"Schema validation errors:\", validate.errors);\n}\n//expect(isValid, JSON.stringify(validate.errors, null,2)).to.be.true;",
              "err": {},
              "uuid": "8eef251d-ae0c-4636-8cd0-def37dbc508a",
              "parentUUID": "e0ca004a-72ca-43de-92f3-fda4219f6d42",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8eef251d-ae0c-4636-8cd0-def37dbc508a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}